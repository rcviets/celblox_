{"version":3,"sources":["images/straightBlock.png","images/CelBlox_Logo_mini.png","images/CelBlox_Logo.png","images/splashContractorCard.svg","images/splashCustomerCard1.svg","images/splashCustomerCard2.svg","images/splashResourceCard.svg","images/splashProductCard.svg","images/singleTaper.png","images/resourceCard1.svg","images/resourceCard2.svg","images/resourceCard3.svg","images/resourceCard4.svg","images/resourceCard5.svg","images/resourceCard6.svg","images/resourceCard7.svg","components/navTop/index.js","components/nav/index.js","components/splashHero/index.js","components/splashInfo/index.js","components/splashBanner/index.js","components/splashServices/index.js","pages/home.js","components/productSplash/index.js","components/productCard/index.js","components/quoteButton/index.js","pages/products.js","components/resourceHero/index.js","components/resourceCards/index.js","pages/resources.js","components/footer/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavTop","Navbar","className","fluid","Col","md","sm","xs","Brand","href","src","require","width","height","alt","Navigation","sticky","collapseOnSelect","expand","Toggle","aria-controls","Collapse","id","Nav","Link","style","color","eventKey","SplashHero","Jumbotron","InfoCards","Container","Row","CardDeck","lg","Card","Img","variant","Body","Title","Text","Button","size","SplashBanner","ServiceCards","Home","xl","Component","ProductHero","class","ProductCard","Image","thumbnail","QuoteButton","block","Products","ResourceHero","ResourceCards","CardColumns","Footer","Resources","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8029c536.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/straightBlock.df1be331.png\";","module.exports = __webpack_public_path__ + \"static/media/CelBlox_Logo_mini.3bd847d7.png\";","module.exports = __webpack_public_path__ + \"static/media/CelBlox_Logo.0e31e2b8.png\";","module.exports = __webpack_public_path__ + \"static/media/splashContractorCard.491e26d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/splashCustomerCard1.494373ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/splashCustomerCard2.db1d6f61.svg\";","module.exports = __webpack_public_path__ + \"static/media/splashResourceCard.9468a435.svg\";","module.exports = __webpack_public_path__ + \"static/media/splashProductCard.7f8ab679.svg\";","module.exports = __webpack_public_path__ + \"static/media/singleTaper.8838b7de.png\";","module.exports = __webpack_public_path__ + \"static/media/resourceCard1.99347c63.svg\";","module.exports = __webpack_public_path__ + \"static/media/resourceCard2.ede56fd3.svg\";","module.exports = __webpack_public_path__ + \"static/media/resourceCard3.7c168a36.svg\";","module.exports = __webpack_public_path__ + \"static/media/resourceCard4.504a9f84.svg\";","module.exports = __webpack_public_path__ + \"static/media/resourceCard5.1b248014.svg\";","module.exports = __webpack_public_path__ + \"static/media/resourceCard6.cfeca41f.svg\";","module.exports = __webpack_public_path__ + \"static/media/resourceCard7.430d3bf1.svg\";","import React from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport \"./style.css\";\r\n\r\nconst NavTop = () => {\r\n    return (\r\n        <Navbar className=\"top-nav\" fluid>\r\n            <Col className=\"top-nav-column\" md={12} sm={12} xs={12}>\r\n                <Navbar.Brand className=\"mini-logo\" href=\"/\">\r\n                    <img\r\n                        src={require(\"../../images/CelBlox_Logo_mini.png\")}\r\n                        width=\"30\"\r\n                        height=\"30\"\r\n                        className=\"top-nav-icon d-inline-block align-top\"\r\n                        alt=\"React Bootstrap logo\"\r\n                    />{' '}\r\n                    <p className=\"top-nav-text\">SUSTAINABLE. DURABLE. COST EFFECTIVE.</p>\r\n                </Navbar.Brand>\r\n            </Col>\r\n        </Navbar>\r\n    );\r\n};\r\n\r\nexport default NavTop;","import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport {\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport \"./style.css\";\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <Router>\r\n      <Navbar className=\"main-nav\" sticky=\"top\" collapseOnSelect expand=\"lg\">\r\n        <Navbar.Brand href=\"https://rcviets.github.io/celblox_/#/\">\r\n          <img\r\n            src={require(\"../../images/CelBlox_Logo.png\")}\r\n            width=\"400\"\r\n            height=\"50\"\r\n            className=\"main-nav-logo d-inline-block align-top\"\r\n            alt=\"Celblox logo\"\r\n          />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" className=\"nav-button\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <h5 className=\"main-brand-text\">The Future Is Coming Together</h5>\r\n          </Nav>\r\n          <Nav>\r\n            <Nav.Link style={{ color: \"#451F55\" }} className=\"nav-links\" href=\"#deets\">Log In</Nav.Link>\r\n            <Nav.Link eventKey={2} style={{ color: \"#451F55\" }} className=\"nav-links\" href=\"https://rcviets.github.io/celblox_/#/products\">\r\n              Products\r\n          </Nav.Link>\r\n            <Nav.Link eventKey={2} style={{ color: \"#451F55\" }} className=\"nav-links\" href=\"https://rcviets.github.io/celblox_/#/resources\">\r\n              Resources\r\n          </Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport \"./style.css\"\r\n\r\nconst SplashHero = () => {\r\n  return (\r\n    <Jumbotron className=\"splash-hero\" fluid />\r\n  );\r\n};\r\n\r\nexport default SplashHero;","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport CardDeck from \"react-bootstrap/CardDeck\"\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./style.css\";\r\n\r\nconst InfoCards = () => {\r\n    return (\r\n        <Container className=\"splash-info\">\r\n            <Row>\r\n                <CardDeck className=\"info-deck\">\r\n                    <Col lg={4} md={12}>\r\n                        <Card className=\"info-card\">\r\n                            <Card.Img variant=\"top\" className=\"pt-5\" src={require(\"../../images/splashContractorCard.svg\")} />\r\n                            <Card.Body>\r\n                                <Card.Title className=\"info-title\">For Your Business</Card.Title>\r\n                                <Card.Text>\r\n                                    <p className=\"info-text\">&#10003;    Speed of Construction<br />\r\n                                        &#10003;   Consolidation of Trades<br />\r\n                                        &#10003;   Site Contention<br />\r\n                                        &#10003;   Prescriptive Method<br />\r\n                                        &#10003;   Risk Mitigation<br />\r\n                                        <hr />\r\n                                        <Button className=\"info-button rounded-0\" size=\"sm\">\r\n                                            Team Up\r\n                                        </Button>\r\n                                    </p>\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col lg={4} md={12}>\r\n                        <Card className=\"info-card\">\r\n                            <Card.Img variant=\"top\" className=\"pt-2\" src={require(\"../../images/splashCustomerCard1.svg\")} />\r\n                            <Card.Body>\r\n                                <Card.Title className=\"info-title\">For Your World</Card.Title>\r\n                                <Card.Text>\r\n                                    <p className=\"info-text\">&#10003;    100% Recyclable Blox<br />\r\n                                        &#10003;   Chemical Free<br />\r\n                                        &#10003;   Active C02 Reduction<br />\r\n                                        &#10003;   Energy Efficient<br />\r\n                                        &#10003;   Forest Conservation<br />\r\n                                        <hr />\r\n                                        <Button className=\"info-button rounded-0\" size=\"sm\">\r\n                                            Get Started\r\n                                        </Button>\r\n                                    </p>\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col lg={4} md={12}>\r\n                        <Card className=\"info-card\">\r\n                            <Card.Img variant=\"top\" className=\"pt-2\" src={require(\"../../images/splashCustomerCard2.svg\")} />\r\n                            <Card.Body className=\"pt-3\">\r\n                                <Card.Title className=\"info-title\">For Your Home</Card.Title>\r\n                                <Card.Text>\r\n                                    <p className=\"info-text\">\r\n                                        &#10003;Safety and Durability<br />\r\n                                        &#10003;   Fire Resistant<br />\r\n                                        &#10003;   Earthquake Resistant<br />\r\n                                        &#10003;   Hurricane Resistant<br />\r\n                                        &#10003;   Tornado Resistant\r\n                                        <hr />\r\n                                        <Button className=\"info-button rounded-0\" size=\"sm\">\r\n                                            Join Us\r\n                                        </Button>\r\n                                    </p>\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </CardDeck>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default InfoCards;","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport \"./style.css\"\r\n\r\nconst SplashBanner = () => {\r\n  return (\r\n    <Jumbotron className=\"splash-banner\" fluid>\r\n        <h1 className=\"splash-banner-text\">Something About How Kewl Celblox Are</h1>\r\n    </Jumbotron>\r\n  );\r\n};\r\n\r\nexport default SplashBanner;","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport CardDeck from \"react-bootstrap/CardDeck\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./style.css\";\r\n\r\nconst ServiceCards = () => {\r\n    return (\r\n        <Container className=\"splash-services\">\r\n                <h2 className=\"services-header\">CelBlox Services</h2>\r\n            <Row>\r\n                <CardDeck className=\"pt-5 services-deck\">\r\n                <Col lg={1} md={12}></Col>\r\n                    <Col lg={4} md={12}>\r\n                    <Card className=\"services-card\">\r\n                        <Card.Img variant=\"top\" className=\"pt-0\" src={require(\"../../images/splashResourceCard.svg\")} />\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                    <p className=\"services-text\">\r\n                                        Spec Sheets<br />\r\n                                        CAD Downloads\r\n                                    <hr />\r\n                                        <Button className=\"services-button rounded-0\" size=\"sm\" href=\"https://rcviets.github.io/celblox_/#/resources\">\r\n                                            Download Resources\r\n                                        </Button>\r\n                                    </p>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    </Col>\r\n                    <Col lg={2} md={12}></Col>\r\n                    <Col lg={4} md={12}>\r\n                    <Card className=\"services-card\">\r\n                        <Card.Img variant=\"top\" className=\"pt-5 pb-5\" src={require(\"../../images/splashProductCard.svg\")} />\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                    <p className=\"services-text pt-4\">\r\n                                        Block Dimensions<br />\r\n                                        Core Widths\r\n                                    <hr />\r\n                                        <Button className=\"services-button rounded-0\" size=\"sm\" href=\"https://rcviets.github.io/celblox_/#/products\">\r\n                                            Browse Products\r\n                                        </Button>\r\n                                    </p>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    </Col>\r\n                    <Col lg={1} md={12}></Col>\r\n                </CardDeck>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ServiceCards;\r\n","import React, { Component } from \"react\";\r\nimport { Col } from \"react-bootstrap\";\r\nimport SplashHero from \"../components/splashHero/index\";\r\nimport InfoCards from \"../components/splashInfo/index\";\r\nimport SplashBanner from \"../components/splashBanner/index\";\r\nimport ServiceCards from \"../components/splashServices/index\";\r\nimport \"./style.css\";\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <Col xl={12} lg={12} md={12}>\r\n                    <SplashHero className=\"jumbotron\" fluid/>\r\n                </Col>\r\n                <Col lg={12} md={12}>\r\n                    <InfoCards />\r\n                </Col>\r\n                <Col lg={12} md={12}>\r\n                    <SplashBanner />\r\n                </Col>\r\n                <Col lg={12} md={12}>\r\n                    <ServiceCards />\r\n                </Col>\r\n            </>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Home;","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./style.css\";\r\n\r\nconst ProductHero = () => {\r\n    return (\r\n        <>\r\n            <Col md={12}>\r\n                <Jumbotron className=\"products-hero\" fluid>\r\n                    <h1 className=\"products-headline\">Browse Products</h1>\r\n                    <div class=\"product-arrow\">\r\n                        <span></span>\r\n                        <span></span>\r\n                        <span></span>\r\n                    </div>\r\n                </Jumbotron>\r\n            </Col>\r\n            <Col md={12}>\r\n                <Jumbotron className=\"products-header\">\r\n                    <Col md={9}>\r\n                        <p className=\"all-product-description\">\r\n                            All Blocks come with 4\", 6\", 8\", 10\", or 12\" Cores\r\n                                </p>\r\n                    </Col>\r\n                    <hr className=\"line-break-one\"></hr>\r\n                </Jumbotron>\r\n            </Col>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductHero;","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport \"./style.css\";\r\n\r\nconst ProductCard = () => {\r\n    return (\r\n        <Container className=\"product-card-container\" fluid>\r\n            <Row className=\"product-card-deck\">\r\n                <Col md={12}>\r\n                    <Card className=\"product-card-body\">\r\n                        <Card.Body className=\"product-card-info\">\r\n                            <Image className=\"product-image\" src={require(\"../../images/straightBlock.png\")} thumbnail />\r\n                                <p className=\"product-text\">Standard 4'<br />\r\n                                Straight Block</p>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <hr className=\"product-card-break\"/>\r\n                </Col>\r\n                <Col md={12}>\r\n                    <Card className=\"product-card-body\">\r\n                        <Card.Body className=\"product-card-info\">\r\n                            <Image className=\"product-image\" src={require(\"../../images/singleTaper.png\")} thumbnail />\r\n                                <p className=\"product-text\">90°<br />\r\n                                Corner Block</p>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <hr className=\"product-card-break\"/>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"product-card-deck\">\r\n                <Col md={12}>\r\n                    <Card className=\"product-card-body\">\r\n                        <Card.Body className=\"product-card-info\">\r\n                            <Image className=\"product-image\" src={require(\"../../images/straightBlock.png\")} thumbnail />\r\n                                <p className=\"product-text\">45°<br />\r\n                                Corner Block</p>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <hr className=\"product-card-break\"/>\r\n                </Col>\r\n                <Col md={12}>\r\n                    <Card className=\"product-card-body\">\r\n                        <Card.Body className=\"product-card-info\">\r\n                            <Image className=\"product-image\" src={require(\"../../images/straightBlock.png\")} thumbnail />\r\n                                <p className=\"product-text\">Single Taper<br />\r\n                                Top Block</p>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <hr className=\"product-card-break\"/>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"product-card-deck\">\r\n                <Col md={12}>\r\n                    <Card className=\"product-card-body\">\r\n                        <Card.Body className=\"product-card-info\">\r\n                            <Image className=\"product-image\" src={require(\"../../images/straightBlock.png\")} thumbnail />\r\n                                <p className=\"product-text\">Double Taper<br />\r\n                                Top Block</p>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <hr className=\"product-card-break\"/>\r\n                </Col>\r\n                <Col md={12}>\r\n                    <Card className=\"product-card-body\">\r\n                        <Card.Body className=\"product-card-info\">\r\n                            <Image className=\"product-image\" src={require(\"../../images/straightBlock.png\")} thumbnail />\r\n                                <p className=\"product-text\">Ledge<br />\r\n                                Brick Block</p>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <hr className=\"product-card-break\"/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ProductCard;","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./style.css\";\r\n\r\nconst QuoteButton = () => {\r\n    return (\r\n        <>\r\n            <Container className=\"quote-button\">\r\n                <Button className=\"product-button rounded-0\" size=\"lg\" block>\r\n                    Request A Quote\r\n                </Button>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default QuoteButton;","import React, { Component } from \"react\";\r\nimport { Col } from \"react-bootstrap\";\r\nimport ProductHero from \"../components/productSplash/index\";\r\nimport ProductCard from \"../components/productCard/index\";\r\nimport QuoteButton from \"../components/quoteButton/index\";\r\n\r\nclass Products extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <Col xl={12} lg={12} md={12}>\r\n                    <ProductHero />\r\n                </Col>\r\n                <Col lg={12} md={12}>\r\n                    <ProductCard />\r\n                </Col>\r\n                <QuoteButton />\r\n            </>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Products;","import React from \"react\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport \"./style.css\";\r\n\r\nconst ResourceHero = () => {\r\n    return (\r\n        <Jumbotron className=\"resource-hero\" fluid>\r\n            <h1 className=\"resource-headline\">DOWNLOAD CENTER</h1>\r\n                <div class=\"resource-arrow\">\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                </div>\r\n        </Jumbotron>\r\n    );\r\n};\r\n\r\nexport default ResourceHero;","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport CardColumns from \"react-bootstrap/CardColumns\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport \"./style.css\";\r\n\r\nconst ResourceCards = () => {\r\n    return (\r\n        <Container className=\"resource-card-container\">\r\n            <CardColumns>\r\n                <Card>\r\n                    <Card.Img variant=\"top\" src={require(\"../../images/resourceCard1.svg\")} />\r\n                    <Card.Body>\r\n                        <Card.Title className=\"resource-card-title\">Spec Sheet</Card.Title>\r\n                        <Card.Text className=\"resource-card-info\">\r\n                            Some text to describe what is being downloaded{' '}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                        <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n                    </Card.Footer>\r\n                </Card>\r\n                <Card>\r\n                    <Card.Img variant=\"top\" src={require(\"../../images/resourceCard2.svg\")} />\r\n                    <Card.Body>\r\n                        <Card.Title className=\"resource-card-title\">Spec Sheet</Card.Title>\r\n                        <Card.Text className=\"resource-card-info\">\r\n                            Some text to describe what is being downloaded{' '}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                        <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n                    </Card.Footer>\r\n                </Card>\r\n                <Card>\r\n                    <Card.Img variant=\"top\" src={require(\"../../images/resourceCard3.svg\")} />\r\n                    <Card.Body>\r\n                    <Card.Title className=\"resource-card-title\">Spec Sheet</Card.Title>\r\n                        <Card.Text className=\"resource-card-info\">\r\n                            Some text to describe what is being downloaded{' '}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                        <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n                    </Card.Footer>\r\n                </Card>\r\n                <Card>\r\n                    <Card.Img variant=\"top\" src={require(\"../../images/resourceCard4.svg\")} />\r\n                    <Card.Body>\r\n                    <Card.Title className=\"resource-card-title\">Spec Sheet</Card.Title>\r\n                        <Card.Text className=\"resource-card-info\">\r\n                            Some text to describe what is being downloaded{' '}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                        <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n                    </Card.Footer>\r\n                </Card>\r\n                <Card>\r\n                    <Card.Img variant=\"top\" src={require(\"../../images/resourceCard5.svg\")} />\r\n                    <Card.Body>\r\n                    <Card.Title className=\"resource-card-title\">Spec Sheet</Card.Title>\r\n                        <Card.Text className=\"resource-card-info\">\r\n                            Some text to describe what is being downloaded{' '}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                        <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n                    </Card.Footer>\r\n                </Card>\r\n                <Card>\r\n                    <Card.Img variant=\"top\" src={require(\"../../images/resourceCard6.svg\")} />\r\n                    <Card.Body>\r\n                    <Card.Title className=\"resource-card-title\">Spec Sheet</Card.Title>\r\n                        <Card.Text className=\"resource-card-info\">\r\n                            Some text to describe what is being downloaded{' '}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                        <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n                    </Card.Footer>\r\n                </Card>\r\n                <Card>\r\n                    <Card.Img variant=\"top\" src={require(\"../../images/resourceCard7.svg\")} />\r\n                    <Card.Body>\r\n                    <Card.Title className=\"resource-card-title\">Spec Sheet</Card.Title>\r\n                        <Card.Text className=\"resource-card-info\">\r\n                            Some text to describe what is being downloaded{' '}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                        <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </CardColumns>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ResourceCards;","import React, { Component } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport ResourceHero from \"../components/resourceHero\";\r\nimport ResourceCards from \"../components/resourceCards\";\r\n\r\nclass Resources extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <Col md={12}>\r\n                    <ResourceHero />\r\n                </Col>\r\n                <Col md={12}>\r\n                    <ResourceCards />\r\n                </Col>\r\n            </>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Resources;","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport \"./style.css\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <Container className=\"footer\" fluid>\r\n            <Row>\r\n                <Col md={3}>\r\n                    <p className=\"footer-text\">\r\n                        <b>CelBlox Performance Wall Systems</b><br />\r\n                        1405 Laukant St.<br />\r\n                        Reedsburg WI 53959<br />\r\n                        (608) 616-2015<br />\r\n                        support@celblox.com\r\n                    </p>\r\n                </Col>\r\n                <Col md={9}>\r\n                    <p className=\"footer-copyright\">\r\n                        CelBlox Performance Wall Systems &copy; Copyright 2016 All Rights Reserved\r\n                    </p>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { Row, Col } from \"react-bootstrap\";\nimport NavTop from \"./components/navTop/index\";\nimport Navigation from \"./components/nav\";\nimport Home from \"./pages/home\";\nimport Products from \"./pages/products\";\nimport Resources from \"./pages/resources\";\nimport Footer from \"./components/footer\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <>\n    <NavTop />\n    <Navigation />\n      <Router>\n        <Switch>\n          <Route path=\"/products\">\n            <Products />\n          </Route>\n          <Route path=\"/resources\">\n            <Resources />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n      <Footer />\n    </>\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>  \n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}